[gd_scene load_steps=6 format=2]

[ext_resource path="res://Root.gd" type="Script" id=1]
[ext_resource path="res://icon.png" type="Texture" id=2]

[sub_resource type="Environment" id=1]
background_mode = 4
adjustment_enabled = true

[sub_resource type="Shader" id=2]
code = "shader_type canvas_item;
// Background Noise

uniform mat2 _rot = mat2( vec2(0.2, 0.86), vec2(-0.86, 0.3));
uniform float _speed = .2;
uniform float _gradation : hint_range(0, 2) = 0.1;

float wave(vec2 p) {
	float v = sin(p.x+sin(p.y) + sin(p.y*.43));
	return v*v;
}

float map(float time, vec2 p) {
	float v = 0.0;
	v += wave(p);
	p.x += time * _speed;
	p = p * _rot;
	v += wave(p);
	p.x += time * _speed * .17;
	p = p * _rot;
	v += wave(p);
	v = abs(1.5 - v);

	return v;
}

void fragment()
{
	vec2 resolution = 1.0 / SCREEN_PIXEL_SIZE;
	vec2 uv = (FRAGCOORD.xy * 2.0 - resolution.xy) / min(resolution.x, resolution.y);
	vec2 p = normalize(vec3(uv.xy, 2.3)).xy * 15.0;
	p.y += TIME * _speed * 0.05;
	float v=map(TIME, p);
	
	COLOR = vec4((v * .5 + texture(SCREEN_TEXTURE,SCREEN_UV).r) / 2.0, (v * .5 + texture(SCREEN_TEXTURE,SCREEN_UV).g) / 2.0, (v * 0.5 + texture(SCREEN_TEXTURE,SCREEN_UV).b / 2.0), _gradation);
}"

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 2 )
shader_param/_rot = Transform2D( 0.2, -0.86, 0.86, 0.3, 0, 0 )
shader_param/_speed = 0.2
shader_param/_gradation = 0.1

[node name="Root" type="Node2D"]
script = ExtResource( 1 )

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource( 1 )

[node name="CanvasLayer" type="CanvasLayer" parent="WorldEnvironment"]

[node name="TextureRect" type="TextureRect" parent="WorldEnvironment/CanvasLayer"]
material = SubResource( 3 )
margin_right = 1030.0
margin_bottom = 598.0
grow_horizontal = 2
grow_vertical = 2
size_flags_horizontal = 3
size_flags_vertical = 3
texture = ExtResource( 2 )
expand = true
__meta__ = {
"_edit_use_anchors_": false
}
